name: release-workflow

# # Controls when the workflow will run
on:
  push:
    # # Triggers the workflow on push events but only for the tagged.
    tags:
      - "*"

#   # A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # As we are using tagged push we get tag name in github.ref so this job is just to get the branch name
  check-branch:
    runs-on: ubuntu-latest
    outputs:
      branch: ${{ steps.check_step.outputs.branch }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get current branch
        id: check_step
        run: |
          raw=$(git branch -r --contains ${{ github.ref }})
          branch=${raw##*/}
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "Branch is $branch."

  # # Build the Development Release
  dev-deploy:
    permissions: write-all
    runs-on: ubuntu-latest
    needs: [check-branch]

    # # if the tag is prefixed with dev_v and the push is comming from dev branch then perform build
    if: ${{ startsWith(github.ref_name, 'dev_v') && needs.check-branch.outputs.branch == 'dev' }}
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: Changelog
        uses: ardalanamini/auto-changelog@v3
        id: changelog
        with:
          github-token: ${{ secrets.github_token }}
          semver: false

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          makeLatest: true
          name: Developement Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ github.token }}

# # Build the Development Release
  prod-deploy:
    permissions: write-all
    runs-on: macos-latest
    needs: check-branch
    if: ${{ startsWith(github.ref_name, 'v') && needs.check-branch.outputs.branch == 'main' }}
    steps:

      - name: ðŸšš Get latest code
        uses: actions/checkout@v2

      - name: Changelog
        uses: ardalanamini/auto-changelog@v3
        id: changelog
        with:
          github-token: ${{ secrets.github_token }}
          semver: false

      - name: Create Release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          makeLatest: true
          name: Production Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          token: ${{ github.token }}

